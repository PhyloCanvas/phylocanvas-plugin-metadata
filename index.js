!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("phylocanvas"));else if("function"==typeof define&&define.amd)define(["phylocanvas"],e);else{var a=e("object"==typeof exports?require("phylocanvas"):t.phylocanvas);for(var r in a)("object"==typeof exports?exports:t)[r]=a[r]}}(this,function(t){return function(t){function e(r){if(a[r])return a[r].exports;var i=a[r]={exports:{},id:r,loaded:!1};return t[r].call(i.exports,i,i.exports,e),i.loaded=!0,i.exports}var a={};return e.m=t,e.c=a,e.p="",e(0)}([function(t,e,a){"use strict";function r(t){return t&&t.__esModule?t:{"default":t}}function i(t){if(Array.isArray(t)){for(var e=0,a=Array(t.length);e<t.length;e++)a[e]=t[e];return a}return Array.from(t)}function n(t){return"circular"===t.treeType||"radial"===t.treeType}function o(t){t(h["default"],"createTree",function(t,e){var a=t.apply(void 0,i(e));return a.metadata=Object.assign({},{show:!1,blockLength:20,blockSize:Number.MAX_SAFE_INTEGER,padding:0,selectedColumns:[],headingDrawn:!1},a.metadata||{}),a});var e=l.Tree.prototype.__lookupGetter__("alignLabels");l.Tree.prototype.__defineGetter__("alignLabels",function(){return this.metadata.show?this.labelAlign&&this.labelAlignEnabled:e.call(this)}),t(l.Tree,"draw",function(t,e){t.apply(this,e),this.metadata.headingDrawn=!1,this.metadata.maxBlockSize=null}),t(l.Tree,"getBounds",function(t,e){var a=t.apply(this,e),r=a[0][0],i=a[0][1],n=a[1][0],o=a[1][1],s=this.getMetadataHeadingLength(),l=this.treeType,h="rectangular"===l||"diagonal"===l,d="hierarchical"===l;return[[r-(d?s:0),i-(h?s:0)],[n,o]]}),t(l.Branch,"drawLeaf",function(t){t.call(this),this.tree.metadata.show&&this.drawMetadata()}),t(l.Branch,"getTotalSize",function(t){var e=t.call(this);return this.tree.metadata.show&&(e+=this.tree.getMetadataLength()),e}),t(l.Branch,"getTotalLength",function(t){var e=t.call(this);return this.tree.metadata.show&&(e+=this.tree.getMetadataLength()),e})}Object.defineProperty(e,"__esModule",{value:!0});var s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol?"symbol":typeof t};e["default"]=o;var l=a(1),h=r(l),d=l.utils.constants,c=d.Angles;l.Tree.prototype.viewMetadataColumns=function(){var t=arguments.length<=0||void 0===arguments[0]?this.getMetadataColumnHeadings():arguments[0];this.metadata.show=!0,this.metadata.selectedColumns=t,this.fitInPanel(),this.draw()},l.Tree.prototype.getMetadataColumnHeadings=function(){var t=!0,e=!1,a=void 0;try{for(var r,i=this.leaves[Symbol.iterator]();!(t=(r=i.next()).done);t=!0){var n=r.value,o=Object.keys(n.data);if(o.length>0)return o}}catch(s){e=!0,a=s}finally{try{!t&&i["return"]&&i["return"]()}finally{if(e)throw a}}return[]},l.Tree.prototype.hasMetadataHeadings=function(){return"diagonal"===this.treeType||this.alignLabels&&"rectangular"===this.treeType||"hierarchical"===this.treeType},l.Tree.prototype.getMetadataLength=function(){return 2*this.baseNodeSize+this.metadata.padding+this.getMetadataColumnHeadings().length*this.metadata.blockLength},l.Tree.prototype.getMetadataHeadingLength=function(){var t=0;if(this.hasMetadataHeadings()){var e=Math.min(this.textSize,this.metadata.blockLength);this.canvas.font=e+"px Sans-serif";var a=!0,r=!1,i=void 0;try{for(var n,o=this.metadata.selectedColumns[Symbol.iterator]();!(a=(n=o.next()).done);a=!0){var s=n.value;t=Math.max(t,this.canvas.measureText(s).width+20)}}catch(l){r=!0,i=l}finally{try{!a&&o["return"]&&o["return"]()}finally{if(r)throw i}}}return t},l.Tree.prototype.getMetadataMaxBlockSize=function(){if(this.metadata.maxBlockSize)return this.metadata.maxBlockSize;if(n(this)){var t=0,e=!0,a=!1,r=void 0;try{for(var i,o=this.leaves[Symbol.iterator]();!(e=(i=o.next()).done);e=!0){var s=i.value,l=s.getLabelStartX();(this.showLabels||this.hoverLabel&&s.highlighted)&&(l+=this.maxLabelLength[this.treeType]);var h=this.alignLabels?this.labelAlign.getLabelOffset(s):0,d=Math.hypot(s.centerx-s.startx,s.centery-s.starty)+l+h;d>t&&(t=d)}}catch(u){a=!0,r=u}finally{try{!e&&o["return"]&&o["return"]()}finally{if(a)throw r}}return this.metadata.maxBlockSize=c.FULL*t/this.leaves.length,this.metadata.maxBlockSize}return this.step},l.Tree.prototype.clearMetadata=function(){var t=!0,e=!1,a=void 0;try{for(var r,i=this.leaves[Symbol.iterator]();!(t=(r=i.next()).done);t=!0){var n=r.value;n.data={}}}catch(o){e=!0,a=o}finally{try{!t&&i["return"]&&i["return"]()}finally{if(e)throw a}}},l.Branch.prototype.drawMetadata=function(){var t=this.tree,e=this.getLabelStartX(),a=0;(t.showLabels||t.hoverLabel&&this.highlighted)&&(e+=t.maxLabelLength[t.treeType]);var r=t.getMetadataMaxBlockSize(),i=Math.min(r,t.metadata.blockSize),o=t.metadata.blockLength-t.metadata.padding;if(t.alignLabels&&(e+=t.labelAlign.getLabelOffset(this)),e+=2*t.metadata.padding,a-=i/2,!t.metadata.headingDrawn&&t.hasMetadataHeadings()&&(this.drawMetadataHeading(e,1.5*i),t.metadata.headingDrawn=!0),Object.keys(this.data).length>0){this.canvas.beginPath();var l=t.metadata.selectedColumns.length>0?t.metadata.selectedColumns:Object.keys(this.data),h=1,d=n(t)&&t.alignLabels?c.FULL*o/t.leaves.length:0,u=!0,f=!1,y=void 0;try{for(var g,v=l[Symbol.iterator]();!(u=(g=v.next()).done);u=!0){var m=g.value;void 0!==s(this.data[m])&&(this.canvas.fillStyle=this.data[m],this.canvas.fillRect(e,a,o,i+h*d)),e+=t.metadata.blockLength,h++}}catch(p){f=!0,y=p}finally{try{!u&&v["return"]&&v["return"]()}finally{if(f)throw y}}this.canvas.stroke(),this.canvas.closePath()}},l.Branch.prototype.drawMetadataHeading=function(t,e){var a=this.tree.treeType,r=this.tree.metadata.selectedColumns.length>0?this.tree.metadata.selectedColumns:Object.keys(this.data),i=Math.min(this.tree.textSize,this.tree.metadata.blockLength);this.canvas.font=i+"px Sans-serif",this.canvas.fillStyle="black",this.canvas.textBaseline="middle";var n=t;n+=(this.tree.metadata.blockLength-this.tree.metadata.padding)/2,this.canvas.rotate(-Math.PI/2);var o=!0,s=!1,l=void 0;try{for(var h,d=r[Symbol.iterator]();!(o=(h=d.next()).done);o=!0){var c=h.value;this.canvas.textAlign="hierarchical"===a?"right":"left",this.canvas.fillText(c,"hierarchical"===a?-e:e,n),n+=this.tree.metadata.blockLength}}catch(u){s=!0,l=u}finally{try{!o&&d["return"]&&d["return"]()}finally{if(s)throw l}}this.canvas.rotate(Math.PI/2)}},function(e,a){e.exports=t}])});